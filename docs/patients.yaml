openapi: 3.0.0
info:
  title: Hospital Backend
  version: 1.0.0
  description: This is a sample server for hospital studies backend.

tags:
  - name: patients
    description: Operations about patients

paths:
  /api/patients:
    get:
      tags:
        - patients
      summary: Get all patients
      operationId: getPatients
      responses:
        '200':
          description: A list of patients
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Patient'
    post:
      tags:
        - patients
      summary: Add a new patient
      operationId: addPatient
      requestBody:
        description: Patient object that needs to be added
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  required: true
                age:
                  type: integer
                  required: false
                dni:
                  type: string
                  required: false
      responses:
        '200':
          description: Patient added
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Patient'
  /api/patients/{patientId}:
    get:
      tags:
        - patients
      summary: Get a patient by ID
      operationId: getPatientById
      parameters:
        - name: patientId
          in: path
          description: ID of patient to return
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: A patient
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Patient'
    put:
      tags:
        - patients
      summary: Update a patient
      operationId: updatePatient
      parameters:
        - name: patientId
          in: path
          description: ID of patient to update
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        description: Patient object that needs to be updated
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Patient'
      responses:
        '200':
          description: Patient updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Patient'
    delete:
      tags:
        - patients
      summary: Delete a patient
      operationId: deletePatient
      parameters:
        - name: patientId
          in: path
          description: ID of patient to delete
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: Patient deleted
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Patient'
  /api/patients/{patientId}/details:
    get:
      tags:
        - patients
      summary: Get details of a patient
      operationId: getPatientDetails
      parameters:
        - name: patientId
          in: path
          description: ID of patient to return details
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: Details of a patient
          content:
            application/json:
              schema:
                type: object
                properties:
                  patient:
                    $ref: '#/components/schemas/Patient'
                  studies:
                    type: array
                    items:
                      $ref: '#/components/schemas/Study'
                  bills:
                    type: array
                    items:
                      $ref: '#/components/schemas/Bill'

components:
# patients:  name | age | dni
# bills: patient_id | amount | date | status | study_id
# studies:  type | status | date | patient_id
  schemas:
    Patient:
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
        age:
          type: integer
        dni:
          type: string
    Study:
      type: object
      properties:
        id:
          type: integer
          format: int64
        type:
          type: string
        status:
          type: string
        date:
          type: string
        patient_id:
          type: integer
          format: int64
    Bill:
      type: object
      properties:
        id:
          type: integer
          format: int64
        patient_id:
          type: integer
          format: int64
        amount:
          type: number
        date:
          type: string
        status:
          type: string
        study_id:
          type: integer
          format: int64